# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2018, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-04-27 02:24-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Xuan Wu <fromwheretowhere.service@gmail.com>\n"
"Language-Team: Chinese <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"

#: ../../tutorial/index.rst:5
msgid "The Python Tutorial"
msgstr "Python 入门教程"

#: ../../tutorial/index.rst:7
msgid ""
"Python is an easy to learn, powerful programming language. It has "
"efficient high-level data structures and a simple but effective approach "
"to object-oriented programming. Python's elegant syntax and dynamic "
"typing, together with its interpreted nature, make it an ideal language "
"for scripting and rapid application development in many areas on most "
"platforms."
msgstr "Python 是种易学而强大的编程语言. 它包含了高效的高级数据结构, 能够用简单而高效的方式进行面向对象编程.Python 优雅的语法和和动态类型,以及它天然的解释能力, 使其成为了大多数平台上能广泛适用于各领域的理想脚本语言和开发环境."

#: ../../tutorial/index.rst:13
msgid ""
"The Python interpreter and the extensive standard library are freely "
"available in source or binary form for all major platforms from the "
"Python Web site, https://www.python.org/, and may be freely distributed. "
"The same site also contains distributions of and pointers to many free "
"third party Python modules, programs and tools, and additional "
"documentation."
msgstr ""
"Python 解释器及其扩展标准库的源码和编译版本可以从 Python 的 Web 站点 "
"https://www.python.org "
"及其所有镜像站点上获得, 并且可以自由发布."
"该站点上也提供了 Python 的一些第三方模块, 程序, 工具以及附加的文档."

#: ../../tutorial/index.rst:19
msgid ""
"The Python interpreter is easily extended with new functions and data "
"types implemented in C or C++ (or other languages callable from C). "
"Python is also suitable as an extension language for customizable "
"applications."
msgstr ""
"Python 的解释器可以很容易的通过 C 或者 C++  (或者其它可以通过 C 调用的语言) 扩展新的函式和数据类型."
"Python 也可以作为定制应用的扩展语言."

#: ../../tutorial/index.rst:23
msgid ""
"This tutorial introduces the reader informally to the basic concepts and "
"features of the Python language and system. It helps to have a Python "
"interpreter handy for hands-on experience, but all examples are self-"
"contained, so the tutorial can be read off-line as well."
msgstr ""
"本教程向读者介绍 Python 语言及其体系的基本知识与概念. 配合 Python 解释器学习会很有帮助,"
"因为文中己包含所有的完整例子, 所以这本手册也可以离线阅读."

#: ../../tutorial/index.rst:28
msgid ""
"For a description of standard objects and modules, see :ref:`library-"
"index`. :ref:`reference-index` gives a more formal definition of the "
"language.  To write extensions in C or C++, read :ref:`extending-index` "
"and :ref:`c-api-index`. There are also several books covering Python in "
"depth."
msgstr ""
"需要有关标准对象和模块的详细介绍的话, 请参阅 :ref:`库参考手册 <library-index>`."
"而 :ref:`语言手册 <reference-index>` 提供了更多关于语言本身的正式说明."
"需要编写 C 或 C++ 扩展, 请阅读 :ref:`扩展和嵌入 <extending-index>` 以及 :ref:`对C接口 <c-api-index>`."
"这几部分涵盖了Python 各领域的深入知识."

#: ../../tutorial/index.rst:33
msgid ""
"This tutorial does not attempt to be comprehensive and cover every single"
" feature, or even every commonly used feature. Instead, it introduces "
"many of Python's most noteworthy features, and will give you a good idea "
"of the language's flavor and style. After reading it, you will be able to"
" read and write Python modules and programs, and you will be ready to "
"learn more about the various Python library modules described in :ref"
":`library-index`."
msgstr ""
"这份入门教程并未尝试讲解和涵盖 Python 的所有特性,"
"甚至也没有包含所有常用特性."
"相反的, 只介绍 Python 中最引人注目的功能,"
"这对读者掌握这门语言的风格大有帮助."
"读完后,你应该已能阅读和编写 Python 模块和程序,"
"接下去就可以从 Python :ref:`库参考手册 <library-index>` 中进一步学习 Python 丰富库和模块."

#: ../../tutorial/index.rst:40
msgid "The :ref:`glossary` is also worth going through."
msgstr ":ref:`术语表 <glossary>` 也值得仔细阅读."

